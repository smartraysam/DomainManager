<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAANcNAADXDQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABhAAsR/gAXJ/8AGin/ABsq/wAbKv8AGyr/ABsq/wAbKv8AGyr/ABsq/wAb
        Kv8AGyr/ABsq/wAbKv8AGyr/ABsq/wAbKv8AGyr/ABsq/wAbKv8AGyr/ABsq/wAbKv8ADBP+AAAAYQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGkAOF3/AH3P/wCL2v8Aj97/AI/e/wCP3v8Aj97/AI/e/wCP
        3v8Aj97/AI/e/wCP3v8Aj97/AI/e/wCP3v8Aj97/AI/e/wCP3v8Aj97/AI/e/wCP3v8Aj97/AJDg/wBB
        Zf8AAABpAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZwBAav8Ajej/AJv1/wCg+f8AoPn/AKD5/wCg
        +f8AoPn/AKD5/wCg+f8AoPn/AKD5/wCg+f8AoPn/AKD5/wCg+f8AoPn/AKD5/wCg+f8AoPn/AKD5/wCg
        +f8Aovz/AElx/wAAAGkAAAAAAAAAAAAAAAAAAAAAAAAAAAAzVQAAJ0EuAG+55QCL5v8AmvP/AJ/3/wCf
        9/8An/f/AJ/3/wCf9/8An/f/AJ/4/wCi+/8Aovv/AKL7/wCi+/8An/j/AJ/3/wCf9/8An/f/AJ/3/wCf
        9/8An/f/AJ/3/wCh+v8ASHD/AAAAaQAAAAAAAAAAAAAAAAAAAAAAAAAAADtiAAAvTisAc7/jAIvm/wCa
        8/8An/f/AJ/3/wCf9/8An/f/AJ/3/wCf+P8Ame7/AHW1/wBtqf8Aban/AHW1/wCZ7v8An/j/AJ/3/wCf
        9/8An/f/AJ/3/wCf9/8An/f/AKH6/wBIcP8AAABpAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAZgBA
        a/8AjOf/AJrz/wCf9/8An/f/AJ/3/wCf9/8An/f/AKD5/wCI0/8EFiD/GBUX/xgVF/8EFiD/AIjT/wCg
        +f8An/f/AJ/3/wCf9/8An/f/AJ/3/wCf9/8Aofr/AEhw/wAAAGkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        4D/+A8B//gAAf/8AAP//AAD//4AB///gB/8=
</value>
  </data>
</root>